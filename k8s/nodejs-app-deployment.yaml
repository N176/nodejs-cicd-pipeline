apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-app
  labels:
    app: nodejs-app
spec:
  replicas: 2  # Adjust the number of replicas for scalability
  selector:
    matchLabels:
      app: nodejs-app
  template:
    metadata:
      labels:
        app: nodejs-app
    spec:
      containers:
        - name: nodejs-app
          image: luffydone/nodejs-app:latest  # Replace with your Docker Hub image
          ports:
            - containerPort: 3000
          env:
            - name: MYSQL_HOST
              value: mysql-service  # The MySQL service name in Kubernetes
            - name: MYSQL_USER
              value: nodejs_user
            - name: MYSQL_PASSWORD
              value: admin
            - name: MYSQL_DATABASE
              value: nodejs_app
---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-app-service
spec:
  selector:
    app: nodejs-app
  ports:
    - protocol: TCP
      port: 80      # The external port to access the app
      targetPort: 3000  # The internal port exposed by the Node.js app
  type: LoadBalancer  # This makes it accessible externally, replace with ClusterIP if not needed
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0  # Official MySQL Docker image
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: rootpassword
            - name: MYSQL_USER
              value: nodejs_user
            - name: MYSQL_PASSWORD
              value: admin
            - name: MYSQL_DATABASE
              value: nodejs_app
          ports:
            - containerPort: 3306
      volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
  clusterIP: None  # This makes the MySQL service accessible within the Kubernetes cluster
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi  # Specify the storage you need

